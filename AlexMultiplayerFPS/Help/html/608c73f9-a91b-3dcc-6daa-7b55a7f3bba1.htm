<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>LoadBalancingPeer Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="LoadBalancingPeer class" /><meta name="System.Keywords" content="Photon.Realtime.LoadBalancingPeer class" /><meta name="Microsoft.Help.F1" content="Photon.Realtime.LoadBalancingPeer" /><meta name="Microsoft.Help.Id" content="T:Photon.Realtime.LoadBalancingPeer" /><meta name="Description" content="summaryT:Photon.Realtime.LoadBalancingPeer" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Photon.Realtime" /><meta name="file" content="608c73f9-a91b-3dcc-6daa-7b55a7f3bba1" /><meta name="guid" content="608c73f9-a91b-3dcc-6daa-7b55a7f3bba1" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">A Sandcastle Documented Class Library<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html\634149f3-64dc-afe7-9c8d-6b9afbfc61b4.htm" title="A Sandcastle Documented Class Library" tocid="roottoc">A Sandcastle Documented Class Library</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/918d8ccf-2c70-e2e7-f9df-4c9bfca19792.htm" title="Photon.Realtime" tocid="918d8ccf-2c70-e2e7-f9df-4c9bfca19792">Photon.Realtime</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/608c73f9-a91b-3dcc-6daa-7b55a7f3bba1.htm" title="LoadBalancingPeer Class" tocid="608c73f9-a91b-3dcc-6daa-7b55a7f3bba1">LoadBalancingPeer Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/75246a90-2c46-bd21-ac60-7d5b5175b99f.htm" title="LoadBalancingPeer Constructor " tocid="75246a90-2c46-bd21-ac60-7d5b5175b99f">LoadBalancingPeer Constructor </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/43a59f9d-d42f-6e67-c50f-7f5bf32f9748.htm" title="LoadBalancingPeer Properties" tocid="43a59f9d-d42f-6e67-c50f-7f5bf32f9748">LoadBalancingPeer Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/d006abe3-a4b0-5537-3597-91fc379a6163.htm" title="LoadBalancingPeer Methods" tocid="d006abe3-a4b0-5537-3597-91fc379a6163">LoadBalancingPeer Methods</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/2a6c6f0b-153f-7b62-8f27-69e8a1048b5b.htm" title="LoadBalancingPeer Fields" tocid="2a6c6f0b-153f-7b62-8f27-69e8a1048b5b">LoadBalancingPeer Fields</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>LoadBalancingPeer Class</h1></td></tr></table><span class="introStyle"></span> <div class="summary"><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "T:Photon.Realtime.LoadBalancingPeer"]</p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="LST6C1484E0_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6C1484E0_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <span class="nolink">PhotonPeer</span><br />    <span class="selflink">Photon.Realtime<span id="LST6C1484E0_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6C1484E0_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>LoadBalancingPeer</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="918d8ccf-2c70-e2e7-f9df-4c9bfca19792.htm">Photon.Realtime</a><br />
    <strong>Assembly:</strong>
   PhotonRealtime (in PhotonRealtime.dll) Version: 0.0.0.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','cs','1','4');return false;">C#</a></div><div id="ID1EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','vb','2','4');return false;">VB</a></div><div id="ID1EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','cpp','3','4');return false;">C++</a></div><div id="ID1EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EDCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">LoadBalancingPeer</span> : <span class="identifier">PhotonPeer</span></pre></div><div id="ID1EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">LoadBalancingPeer</span>
	<span class="keyword">Inherits</span> <span class="identifier">PhotonPeer</span></pre></div><div id="ID1EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">LoadBalancingPeer</span> : <span class="keyword">public</span> <span class="identifier">PhotonPeer</span></pre></div><div id="ID1EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">type</span> <span class="identifier">LoadBalancingPeer</span> =  
    <span class="keyword">class</span>
        <span class="keyword">inherit</span> <span class="identifier">PhotonPeer</span>
    <span class="keyword">end</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EDCA");</script></div><p>The <span class="selflink">LoadBalancingPeer</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="d7b1e2ce-ce4c-fd59-7f16-612ddd2a7c46.htm">LoadBalancingPeer(ConnectionProtocol)</a></td><td><div class="summary">Initializes a new instance of the <span class="selflink">LoadBalancingPeer</span> class</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="e2ac7500-aa2a-8871-e88d-75bc6bab5038.htm">LoadBalancingPeer(IPhotonPeerListener, ConnectionProtocol)</a></td><td><div class="summary">Initializes a new instance of the <span class="selflink">LoadBalancingPeer</span> class</div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">ByteCountCurrentDispatch</span></td><td><div class="summary">
             Gets the size of the dispatched event or operation-result in bytes.
             This value is set before OnEvent() or OnOperationResponse() is called (within DispatchIncomingCommands()).
             </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">ByteCountLastOperation</span></td><td><div class="summary">
             Gets the size of the last serialized operation call in bytes.
             The value includes all headers for this single operation but excludes those of UDP, Enet Package Headers and TCP.
             </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">BytesIn</span></td><td><div class="summary">
            Gets count of all bytes coming in (including headers, excluding UDP/TCP overhead)
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">BytesOut</span></td><td><div class="summary">
            Gets count of all bytes going out (including headers, excluding UDP/TCP overhead)
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protproperty.gif" alt="Protected property" title="Protected property" /></td><td><span class="nolink">ClientSdkIdShifted</span></td><td><div class="summary">For the Init-request, we shift the ClientId by one and the last bit signals a "debug" (0) or "release" build (1).</div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">ClientVersion</span></td><td><div class="summary">Version of this library as string.</div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">CommandBufferSize</span></td><td> <strong>Obsolete. </strong><div class="summary">
            No effect anymore. Removed without replacement.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">CommandInfoCurrentDispatch</span></td><td><div class="summary">Returns the debug string of the event or operation-response currently being dispatched or string. Empty if none.</div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">CommandLogSize</span></td><td><div class="summary">Size of CommandLog. Default is 0, no logging.</div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">ConnectionTime</span></td><td><div class="summary">The internally used "per connection" time value, which is updated infrequently, when the library executes some connectio-related tasks.</div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">CrcEnabled</span></td><td><div class="summary">
             While not connected, this controls if the next connection(s) should use a per-package CRC checksum.
             </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">EnableServerTracing</span></td><td><div class="summary">
            Debugging option to tell the Photon Server to log all datagrams.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">IsEncryptionAvailable</span></td><td><div class="summary">
            This property is set internally, when OpExchangeKeysForEncryption successfully finished.
            While it's true, encryption can be used for operations.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">IsSendingOnlyAcks</span></td><td><div class="summary">
            While true, the peer will not send any other commands except ACKs (used in UDP connections).
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">IsSimulationEnabled</span></td><td><div class="summary">
            Gets or sets the network simulation "enabled" setting.
            Changing this value also locks this peer's sending and when setting false,
            the internally used queues are executed (so setting to false can take some cycles).
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">LastSendAckTime</span></td><td><div class="summary">The last ConnectionTime value, when some ACKs were sent out by this client.</div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">LastSendOutgoingTime</span></td><td><div class="summary">The last ConnectionTime value, when SendOutgoingCommands actually checked outgoing queues to send them. Must be connected.</div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">LimitOfUnreliableCommands</span></td><td> <strong>Obsolete. </strong><div class="summary">
            No effect anymore. Removed without replacement.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">Listener</span></td><td><div class="summary">
            Gets the IPhotonPeerListener of this instance (set in constructor).
            Can be used in derived classes for Listener.DebugReturn().
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">LocalMsTimestampDelegate</span></td><td><div class="summary">
            This setter for the (local-) timestamp delegate replaces the default Environment.TickCount with any equal function.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">LocalTimeInMilliSeconds</span></td><td> <strong>Obsolete. </strong><div class="summary">
            Gets a local timestamp in milliseconds by calling SupportClass.GetTickCount().
            See LocalMsTimestampDelegate.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">MaximumTransferUnit</span></td><td><div class="summary">
            The Maximum Trasfer Unit (MTU) defines the (network-level) packet-content size that is
            guaranteed to arrive at the server in one piece. The Photon Protocol uses this
            size to split larger data into packets and for receive-buffers of packets.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">NetworkSimulationSettings</span></td><td><div class="summary">
            Gets the settings for built-in Network Simulation for this peer instance
            while IsSimulationEnabled will enable or disable them.
            Once obtained, the settings can be modified by changing the properties.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">PacketLossByChallenge</span></td><td><div class="summary">
            Count of packages dropped due to wrong challenge for this connection.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">PacketLossByCrc</span></td><td><div class="summary">
            Count of packages dropped due to failed CRC checks for this connection.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">PeerID</span></td><td><div class="summary">
            This peer's ID as assigned by the server or 0 if not using UDP. Will be 0xFFFF before the client connects.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">PeerState</span></td><td><div class="summary">
            This is the (low level) state of the connection to the server of a PhotonPeer. Managed internally and read-only.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">QueuedIncomingCommands</span></td><td><div class="summary">
            Count of all currently received but not-yet-Dispatched reliable commands
            (events and operation results) from all channels.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">QueuedOutgoingCommands</span></td><td><div class="summary">
            Count of all commands currently queued as outgoing, including all channels and reliable, unreliable.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">QuickResendAttempts</span></td><td><div class="summary">
            Up to 4 resend attempts for a reliable command can be done in quick succession (after RTT+4*Variance).
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">ResentReliableCommands</span></td><td><div class="summary">
            Count of commands that got repeated (due to local repeat-timing before an ACK was received).
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">RoundTripTime</span></td><td><div class="summary">
             Time until a reliable command is acknowledged by the server.
            
             The value measures network latency and for UDP it includes the server's ACK-delay (setting in config).
             In TCP, there is no ACK-delay, so the value is slightly lower (if you use default settings for Photon).
            
             RoundTripTime is updated constantly. Every reliable command will contribute a fraction to this value.
            
             This is also the approximate time until a raised event reaches another client or until an operation
             result is available.
             </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">RoundTripTimeVariance</span></td><td><div class="summary">
            Changes of the roundtriptime as variance value. Gives a hint about how much the time is changing.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">SentReliableCommandsCount</span></td><td><div class="summary">
            Gets the count of sent but not yet acknowledged commands (for UDP connections).
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">SerializationProtocolType</span></td><td><div class="summary">Enables selection of a (Photon-)serialization protocol. Used in Connect methods.</div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">ServerAddress</span></td><td><div class="summary">
            The server address which was used in PhotonPeer.Connect() or null (before Connect() was called).
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">ServerIpAddress</span></td><td><div class="summary">Contains the IP address of the previously resolved ServerAddress (or empty, if address wasn't resolved with the internal methods).</div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">ServerTimeInMilliSeconds</span></td><td><div class="summary">
             Approximated Environment.TickCount value of server (while connected).
             </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">SocketImplementation</span></td><td><div class="summary">
            Can be used to read the IPhotonSocket implementation at runtime (before connecting).
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">TimestampOfLastSocketReceive</span></td><td><div class="summary">
            Timestamp of the last time anything (!) was received from the server (including low level Ping, ACKs, events and operation-returns).
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">TrafficStatsElapsedMs</span></td><td><div class="summary">
            Returns the count of milliseconds the stats are enabled for tracking.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">TrafficStatsEnabled</span></td><td><div class="summary">
            Enables or disables collection of statistics in TrafficStatsIncoming, TrafficStatsOutgoing and TrafficstatsGameLevel.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">TrafficStatsGameLevel</span></td><td><div class="summary">
            Gets a statistic of incoming and outgoing traffic, split by operation, operation-result and event.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">TrafficStatsIncoming</span></td><td><div class="summary">
            Gets the byte-count of incoming "low level" messages, which are either Enet Commands or Tcp Messages.
            These include all headers, except those of the underlying internet protocol Udp or Tcp.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">TrafficStatsOutgoing</span></td><td><div class="summary">
            Gets the byte-count of outgoing "low level" messages, which are either Enet Commands or Tcp Messages.
            These include all headers, except those of the underlying internet protocol Udp or Tcp.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">TransportProtocol</span></td><td><div class="summary">This is the transport protocol to be used for next connect (see remarks).</div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">UsedProtocol</span></td><td><div class="summary">The protocol this peer is currently connected/connecting with (or 0).</div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">CommandLogToString</span></td><td><div class="summary">Converts the CommandLog into a readable table-like string with summary.</div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">Connect(String, String)</span></td><td><div class="summary">
             Connects to a Photon server. This wraps up DNS name resolution, sending the AppId and establishing encryption.
             </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">Connect(String, String, Object)</span></td><td><div class="summary">
             Connects to a Photon server. This wraps up DNS name resolution, sending the AppId and establishing encryption.
             </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">Disconnect</span></td><td><div class="summary">
             This method initiates a mutual disconnect between this client and the server.
             </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">DispatchIncomingCommands</span></td><td><div class="summary">
             Dispatching received messages (commands), causes callbacks for events, responses and state changes within a IPhotonPeerListener.
             </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/bsc2ak47" target="_blank">Equals</a></td><td><div class="summary">Determines whether the specified object is equal to the current object.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">EstablishEncryption</span></td><td><div class="summary">
             This method creates a public key for this client and exchanges it with the server.
             </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">FetchServerTimestamp</span></td><td><div class="summary">
             This will fetch the server's timestamp and update the approximation for property ServerTimeInMilliseconds.
             </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/4k87zsw7" target="_blank">Finalize</a></td><td><div class="summary">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/zdee4b3y" target="_blank">GetHashCode</a></td><td><div class="summary">Serves as the default hash function. </div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/dfwy45w9" target="_blank">GetType</a></td><td><div class="summary">Gets the <a href="http://msdn2.microsoft.com/en-us/library/42892f65" target="_blank">Type</a> of the current instance.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">InitDatagramEncryption</span></td><td><div class="summary">
            Initializes Datagram Encryption.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">InitPayloadEncryption</span></td><td> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/57ctke0a" target="_blank">MemberwiseClone</a></td><td><div class="summary">Creates a shallow copy of the current <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="0418d0bf-c18d-dfea-6e17-7f6abfd92b44.htm">OpAuthenticate</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="3ab507a4-784d-fef9-4f76-fff27743be92.htm">OpAuthenticateOnce</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="f23f2443-c584-ecc9-9ffb-35c946f8fdbd.htm">OpChangeGroups</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="6ba5220b-7000-5de6-451a-8db503943b7f.htm">OpCreateRoom</a></td><td /></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">OpCustom(OperationRequest, Boolean, Byte, Boolean)</span></td><td> <strong>Obsolete. </strong><div class="summary">
            Allows the client to send any operation to the Photon Server by setting any opCode and the operation's parameters.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">OpCustom(Byte, Dictionary<span id="LST6C1484E0_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6C1484E0_2?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Byte, Object<span id="LST6C1484E0_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6C1484E0_3?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Boolean, Byte, Boolean)</span></td><td> <strong>Obsolete. </strong><div class="summary">
            Allows the client to send any operation to the Photon Server by setting any opCode and the operation's parameters.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="f4c6473f-5651-7b80-2d27-b65a97191036.htm">OpFindFriends</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="f7528c0e-17a7-2c33-d16c-13099ca335d9.htm">OpGetGameList</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="d6f14da7-9f3c-a023-e97e-bd948acb3063.htm">OpGetRegions</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="30c603b1-23e2-69c7-ada0-170b98afff57.htm">OpJoinLobby</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="39a0b5c0-7621-fab0-ad4e-2eafa2619071.htm">OpJoinRandomRoom</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="ef5076a2-1c4b-6be0-0721-7234bc22c704.htm">OpJoinRoom</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="309940ad-b44c-1dc3-0885-30210cf4bb67.htm">OpLeaveLobby</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="7af18289-5d79-aea9-4573-2972721946c9.htm">OpLeaveRoom</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="765c12d8-a42d-f2f3-a562-3781c3bf016a.htm">OpRaiseEvent</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="6a6ae468-abe3-3704-1448-3aea5793e7b0.htm">OpSetCustomPropertiesOfActor</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="98117d90-9ecd-62de-eff7-d293608938c0.htm">OpSetCustomPropertiesOfRoom</a></td><td /></tr><tr data="protected;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="d79e482b-879b-661f-251c-09a74f5dc64b.htm">OpSetPropertiesOfActor</a></td><td /></tr><tr data="protected;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="11ba9d54-e86a-9552-1b95-6393d3b4703b.htm">OpSetPropertiesOfRoom</a></td><td /></tr><tr data="protected;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="00843f95-304b-48af-7b55-3b0c9409747e.htm">OpSetPropertyOfRoom</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="93ac7237-1ede-c916-4970-e2069468389d.htm">OpSettings</a></td><td /></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">SendAcksOnly</span></td><td> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">SendOperation</span></td><td><div class="summary">
             Prepares your operation (code and parameters) to be sent to the Photon Server with specified SendOptions.
             </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">SendOutgoingCommands</span></td><td><div class="summary">
             Creates and sends a UDP/TCP package with outgoing commands (operations and acknowledgements). Also called by Service().
             </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><span class="nolink">Service</span></td><td><div class="summary">
             This method excutes DispatchIncomingCommands and SendOutgoingCommands in your application Thread-context.
             </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">StopThread</span></td><td><div class="summary">
            This method immediately closes a connection (pure client side) and ends related listening Threads.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/7bxwbwt2" target="_blank">ToString</a></td><td><div class="summary">Returns a string that represents the current object.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">TrafficStatsReset</span></td><td><div class="summary">
            Creates new instances of TrafficStats and starts a new timer for those.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">VitalStatsToString</span></td><td><div class="summary">
            Returns a string of the most interesting connection statistics.
            When you have issues on the client side, these might contain hints about the issue's cause.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Fields</span></div><div id="ID6RBSection" class="collapsibleSection"><table class="members" id="fieldList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><span class="nolink">ChannelCount</span></td><td><div class="summary">
            Gets / sets the number of channels available in UDP connections with Photon.
            Photon Channels are only supported for UDP.
            The default ChannelCount is 2. Channel IDs start with 0 and 255 is a internal channel.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protfield.gif" alt="Protected field" title="Protected field" /></td><td><span class="nolink">ClientSdkId</span></td><td><div class="summary">A simplified identifier for client SDKs. Photon's APIs might modify this (as a dll can be used in more than one product). Helps debugging.</div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><span class="nolink">DebugOut</span></td><td><div class="summary">
            Sets the level (and amount) of debug output provided by the library.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><span class="nolink">DisconnectTimeout</span></td><td><div class="summary">
             Milliseconds before an individual command must be ACKed by server - after this a timeout-disconnect is triggered.
             DisconnectTimeout is not an exact value for a timeout. The exact timing of the timeout depends on the frequency
             of Service() calls and commands that are sent with long roundtrip-times and variance are checked less often for
             re-sending!
            
             DisconnectTimeout and SentCountAllowance are competing settings: either might trigger a disconnect on the
             client first, depending on the values and Roundtrip Time.
             Default: 10000 ms.
             </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protfield.gif" alt="Protected field" title="Protected field" /></td><td><span class="nolink">PayloadEncryptionSecret</span></td><td><div class="summary">PayloadEncryption Secret. Message payloads get encrypted with it individually and on demand.</div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="protected;static;declared;notNetfw;"><td><img src="../icons/protfield.gif" alt="Protected field" title="Protected field" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="d1a9b1e5-a477-9f35-d9b0-6403408952ac.htm">PingImplementation</a></td><td /></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><span class="nolink">RhttpMaxConnections</span></td><td><div class="summary"> (default=6) maximum number of open connections, should be &gt; RhttpMinConnections </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><span class="nolink">RhttpMinConnections</span></td><td><div class="summary"> (default=2) minimum number of open connections </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><span class="nolink">SentCountAllowance</span></td><td><div class="summary">
             Number of send retries before a peer is considered lost/disconnected. Default: 7.
             The initial timeout countdown of a command is calculated by the current roundTripTime + 4 * roundTripTimeVariance.
             Please note that the timeout span until a command will be resent is not constant, but based on
             the roundtrip time at the initial sending, which will be doubled with every failed retry.
            
             DisconnectTimeout and SentCountAllowance are competing settings: either might trigger a disconnect on the
             client first, depending on the values and Roundtrip Time.
             </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><span class="nolink">SocketImplementationConfig</span></td><td><div class="summary">Defines which IPhotonSocket class to use per ConnectionProtocol.</div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><span class="nolink">TimePingInterval</span></td><td><div class="summary">
            Sets the milliseconds without reliable command before a ping command (reliable) will be sent (Default: 1000ms).
            The ping command is used to keep track of the connection in case the client does not send reliable commands
            by itself.
            A ping (or reliable commands) will update the RoundTripTime calculation.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><span class="nolink">WarningSize</span></td><td> <strong>Obsolete. </strong><div class="summary">
            The WarningSize was used test all message queues for congestion.
            </div> (Inherited from <span class="nolink">PhotonPeer</span>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID7RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="918d8ccf-2c70-e2e7-f9df-4c9bfca19792.htm">Photon.Realtime Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>